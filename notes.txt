initSummary = qBot.predictSummary()
        greedySummary = qBot.predictSummary(inference='greedy')
        print(initSummary[0])

        print("===============")

        print(summary)
        a = torch.cat(
            (initSummary[0][0], torch.tensor([summary[0][0] + 1])))
        b = torch.cat(
            (greedySummary[0][0], torch.tensor([summary[0][0] + 1])))
        print(a)
        print('-=--')
        print()

        summLogProbs = qBot.forwardSumm(summary=summary)
        initprob = qBot.forwardSumm(summary=torch.tensor([list(a)]))
        greedprob = qBot.forwardSumm(summary=torch.tensor([list(b)]))

        print(utils.maskedNll(summLogProbs,
                              summary.contiguous()))
        print(utils.maskedNll(initprob,
                              torch.tensor([list(a)]).contiguous()))
        print(utils.maskedNll(greedprob,
                              summary.contiguous()) - utils.maskedNll(initprob,
                                                                      summary.contiguous()))
        exit()

        print(initprob.shape, greedprob.shape, summLogProbs.shape)
        print(summary[0][0] + 1)
        print('===================')
        print(utils.maskedNll(summLogProbs,
                              summary.contiguous()))
        # print(utils.maskedNll(initprob,
        #                       summary.contiguous()))
        # print(utils.maskedNll(greedprob,
        #                       summary.contiguous()))
        print('++++++++++++++++++++++++++++++++++++++')
        exit()
        prevSummDist = utils.maskedNll(summLogProbs,
                                       summary.contiguous())
        summLoss += torch.mean(prevSummDist)
        prevSummDist = torch.mean(prevSummDist)